name: PyPI

on:
  workflow_dispatch:
    inputs:
      target:
        type: choice
        description: 'Package Index'
        required: true
        default: 'TESTPYPI'
        options: [ 'TESTPYPI', 'PYPI' ]
      version:
        type: string
        description: 'Version tag'
        required: true
        default: '3.1'

jobs:
  build_wheels:
    name: Wheels for ${{ matrix.python }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest , windows-latest, macos-latest ]
        python: [ "cp310", "cp311", "cp312", "cp313" ]
        arch: [ auto64 ]

    steps:
      - name: Checkout zipline
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event.inputs.version }}

      - name: Set Xcode version
        uses: maxim-lobanov/setup-xcode@v1
        if: ${{ matrix.os == 'macos-latest' }}
        with:
          xcode-version: latest-stable

      - name: Wheels macOS / Linux
        if: runner.os != 'Windows'
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_ARCHS_MACOS: x86_64 arm64
          CIBW_BUILD: "${{ matrix.python }}-*"
          CIBW_SKIP: "*-musllinux_*"
          CIBW_ENVIRONMENT_MACOS: MACOSX_DEPLOYMENT_TARGET=10.15

      - name: Install MSVC amd64
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: amd64

      - name: Wheels Windows
        if: runner.os == 'Windows'
        uses: pypa/cibuildwheel@v3.1.3
        env:
          CIBW_BUILD: "${{ matrix.python }}-win_amd64"

      - name: Store artifacts
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact-${{ matrix.os }}-${{ matrix.python }}-${{ matrix.arch }}.whl
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.event.inputs.version }}

      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: '3.11'
      - name: Build sdist
        run: |
          pip install -U pip setuptools build
          python -m build --sdist
      - name: upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact-sdist
          path: ./dist/*.tar.gz

  upload_pypi:
    needs: [ build_wheels, build_sdist ]
    runs-on: ubuntu-latest
    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v5
        with:
          pattern: my-artifact-*
          path: artifacts/
          merge-multiple: true
      - name: Display structure of downloaded files
        run: ls -R artifacts
      - name: Publish to PyPI
        if: ${{ github.event.inputs.target  == 'PYPI' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_TOKEN }}
          packages-dir: artifacts/
      - name: Publish to PyPI - Test
        if: ${{ github.event.inputs.target  == 'TESTPYPI' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TESTPYPI_TOKEN }}
          repository-url: https://test.pypi.org/legacy/
          skip-existing: true
          verbose: true
          packages-dir: artifacts/
